<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSR Representative Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
</head>
<body class="dashboard-container">
    <%- include('../partials/header', { title: 'CSR Representative Dashboard', user: user }) %>

    <div class="container-fluid">
        <!-- Welcome Section -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="dashboard-header text-center">
                    <h1>
                        <i class="fas fa-tachometer-alt me-3"></i>
                        CSR Representative Dashboard
                    </h1>
                    <p>Manage opportunities, shortlist, and match history</p>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Quick Actions</h5>
                        <div class="d-flex gap-2">
                            <a href="#searchSection" class="btn btn-primary btn-sm">
                                <i class="fas fa-search"></i> Search Opportunities
                            </a>
                            <a href="#shortlistSection" class="btn btn-warning btn-sm">
                                <i class="fas fa-star"></i> View Shortlist
                            </a>
                            <a href="#historySection" class="btn btn-info btn-sm">
                                <i class="fas fa-history"></i> View History
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search Opportunities Section -->
        <div class="row mb-4" id="searchSection">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-search"></i> Search Opportunities</h5>
                    </div>
                    <div class="card-body">
                        <!-- Search Form -->
                        <form id="searchForm" class="row g-3 mb-3">
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="searchTerm" placeholder="Search opportunities...">
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="searchCategory">
                                    <option value="">All Categories</option>
                                    <option value="Food">Food</option>
                                    <option value="Shelter">Shelter</option>
                                    <option value="Medical">Medical</option>
                                    <option value="Transportation">Transportation</option>
                                    <option value="Education">Education</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="searchUrgency">
                                    <option value="">All Urgency</option>
                                    <option value="low">Low</option>
                                    <option value="medium">Medium</option>
                                    <option value="high">High</option>
                                    <option value="critical">Critical</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-primary w-100" onclick="handleSearch()">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-outline-secondary w-100" onclick="loadDashboard()">
                                    <i class="fas fa-refresh"></i> Refresh
                                </button>
                            </div>
                        </form>
                        
                        <!-- Search Results -->
                        <div id="search-results" class="row">
                            <!-- Results will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Shortlist Section -->
        <div class="row mb-4" id="shortlistSection">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-star"></i> My Shortlist</h5>
                    </div>
                    <div class="card-body">
                        <!-- Shortlist Search Form -->
                        <form class="row g-3 mb-3">
                            <div class="col-md-3">
                                <input type="text" class="form-control" id="shortlistSearchTerm" placeholder="Search shortlist...">
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="shortlistCategory">
                                    <option value="">All Categories</option>
                                    <option value="Food">Food</option>
                                    <option value="Shelter">Shelter</option>
                                    <option value="Medical">Medical</option>
                                    <option value="Transportation">Transportation</option>
                                    <option value="Education">Education</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="shortlistUrgency">
                                    <option value="">All Urgency</option>
                                    <option value="low">Low</option>
                                    <option value="medium">Medium</option>
                                    <option value="high">High</option>
                                    <option value="critical">Critical</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-warning w-100" onclick="handleShortlistSearch()">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-outline-secondary w-100" onclick="viewShortlist()">
                                    <i class="fas fa-list"></i> View All
                                </button>
                            </div>
                        </form>
                        
                        <div id="shortlist-results" class="row">
                            <!-- Shortlist items will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- History Section -->
        <div class="row mb-4" id="historySection">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-history"></i> Match History</h5>
                    </div>
                    <div class="card-body">
                        <!-- History Search Form -->
                        <form class="row g-3 mb-3">
                            <div class="col-md-2">
                                <input type="text" class="form-control" id="historySearchTerm" placeholder="Search history...">
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="historyCategory">
                                    <option value="">All Categories</option>
                                    <option value="Food">Food</option>
                                    <option value="Shelter">Shelter</option>
                                    <option value="Medical">Medical</option>
                                    <option value="Transportation">Transportation</option>
                                    <option value="Education">Education</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="historyStatus">
                                    <option value="">All Status</option>
                                    <option value="pending">Pending</option>
                                    <option value="assigned">Assigned</option>
                                    <option value="completed">Completed</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-info w-100" onclick="handleHistorySearch()">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-outline-secondary w-100" onclick="viewHistory()">
                                    <i class="fas fa-list"></i> View All
                                </button>
                            </div>
                        </form>
                        
                        <div id="history-results" class="row">
                            <!-- History items will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <script>
        
        // Optimized Dashboard - Using existing BCEs properly
        
        // Simplified Dashboard - Let BCEs handle everything
        async function loadDashboard() {
            await Promise.all([
                apiCall('csrrepresentative_searchopportunity/searchOpportunity', { searchTerm: '', category: '', urgency: '' }).then(displayOpportunities),
                apiCall('csrrepresentative_viewshortlist/viewShortlist', { userId: '<%= user.id %>' }).then(displayShortlist),
                apiCall('csrrepresentative_viewhistory/viewHistory', { userId: '<%= user.id %>' }).then(displayHistory)
            ]);
        }
        
        // Generic Action Handler
        async function handleAction(action, data) {
            const response = await apiCall(`csrrepresentative_${action}`, data);
            
            if (response.success) {
                showSuccess(response.message || 'Action completed!');
                // Refresh relevant sections with retry logic
                if (action.includes('shortlist')) {
                    setTimeout(() => refreshShortlistWithRetry(), 200);
                }
                if (action.includes('history')) {
                    setTimeout(() => viewHistory(), 100);
                }
                if (action.includes('opportunity')) {
                    setTimeout(() => loadDashboard(), 100);
                }
            } else {
                showError(response.error);
            }
        }
        
        // Retry logic for shortlist refresh
        async function refreshShortlistWithRetry(retries = 3) {
            try {
                const response = await apiCall('csrrepresentative_viewshortlist/viewShortlist', { userId: '<%= user.id %>' });
                if (response.success) {
                    displayShortlist(response);
                } else if (retries > 0) {
                    // Retry after delay if failed
                    setTimeout(() => refreshShortlistWithRetry(retries - 1), 500);
                } else {
                    console.log('Shortlist refresh failed after retries');
                }
            } catch (error) {
                if (retries > 0) {
                    setTimeout(() => refreshShortlistWithRetry(retries - 1), 500);
                } else {
                    console.error('Shortlist refresh error:', error);
                }
            }
        }
        
        // Specific Action Functions (simplified)
        async function saveToShortlist(requestId) {
            await handleAction('savetoshortlist/saveToShortlist', { userId: '<%= user.id %>', requestId });
        }
        
        async function removeFromShortlist(requestId) {
            await handleAction('removeshortlist/removeFromShortlist', { userId: '<%= user.id %>', requestId });
        }
        
        async function acceptRequest(requestId) {
            await handleAction('viewopportunity/acceptRequest', { userId: '<%= user.id %>', requestId, serviceType: 'general' });
        }
        
        async function completeMatch(matchId) {
            await handleAction('viewhistory/completeMatch', { userId: '<%= user.id %>', matchId, notes: '' });
        }
        
        // Search and View Functions (simplified)
        async function searchOpportunities(filters) {
            const response = await apiCall('csrrepresentative_searchopportunity/searchOpportunity', filters);
            displayOpportunities(response);
        }
        
        async function searchShortlist(filters) {
            const response = await apiCall('csrrepresentative_searchshortlist/searchShortlist', { userId: '<%= user.id %>', ...filters });
            displayShortlist(response);
        }
        
        async function searchHistory(filters) {
            const response = await apiCall('csrrepresentative_searchhistory/searchHistory', { userId: '<%= user.id %>', ...filters });
            displayHistory(response);
        }
        
        async function viewShortlist() {
            const response = await apiCall('csrrepresentative_viewshortlist/viewShortlist', { userId: '<%= user.id %>' });
            displayShortlist(response);
        }
        
        async function viewHistory() {
            const response = await apiCall('csrrepresentative_viewhistory/viewHistory', { userId: '<%= user.id %>' });
            displayHistory(response);
        }
        
        // Generic API Call Function
        async function apiCall(endpoint, data) {
            const formData = new FormData();
            Object.keys(data).forEach(key => formData.append(key, data[key]));
            
            const response = await fetch(`/bce/${endpoint}`, {
                method: 'POST',
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                body: formData
            });
            return await response.json();
        }
        
        // Display Functions (Handle BCE responses directly)
        function displayOpportunities(response) {
            const container = document.getElementById('search-results');
            if (!container) return;
            
            if (!response.success || !response.data?.opportunities) {
                container.innerHTML = '<div class="text-center py-5"><h5>No opportunities found</h5></div>';
                return;
            }
            
            const opportunities = response.data.opportunities;
            if (opportunities.length === 0) {
                container.innerHTML = '<div class="text-center py-5"><h5>No opportunities found</h5></div>';
                return;
            }
            
            container.innerHTML = opportunities.map(item => renderCard(item, 'opportunity')).join('');
        }
        
        function displayShortlist(response) {
            const container = document.getElementById('shortlist-results');
            if (!container) return;
            
            if (!response.success || !response.data?.shortlistItems) {
                container.innerHTML = '<div class="text-center py-5"><h5>No shortlist items</h5></div>';
                return;
            }
            
            const shortlist = response.data.shortlistItems;
            if (shortlist.length === 0) {
                container.innerHTML = '<div class="text-center py-5"><h5>No shortlist items</h5></div>';
                return;
            }
            
            container.innerHTML = shortlist.map(item => renderCard(item, 'shortlist')).join('');
        }
        
        function displayHistory(response) {
            const container = document.getElementById('history-results');
            if (!container) return;
            
            if (!response.success || !response.data?.historyItems) {
                container.innerHTML = '<div class="text-center py-5"><h5>No history items</h5></div>';
                return;
            }
            
            const history = response.data.historyItems;
            if (history.length === 0) {
                container.innerHTML = '<div class="text-center py-5"><h5>No history items</h5></div>';
                return;
            }
            
            container.innerHTML = history.map(item => renderCard(item, 'history')).join('');
        }
        
        function renderCard(item, type) {
            // Use the formatted data from BCE
            return `
                <div class="col-md-6 mb-3">
                    <div class="card">
                        <div class="card-body position-relative">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h6 class="card-title mb-0">${item.title}</h6>
                                <span class="badge ${item.statusBadge || 'bg-secondary'}">${item.status || 'Unknown'}</span>
                            </div>
                            <p class="card-text">${item.description}</p>
                            <div class="d-flex gap-2">
                                ${getActionButtons(item, type)}
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function getActionButtons(item, type) {
            const buttons = {
                opportunity: [
                    `<button class="btn btn-sm btn-primary" onclick="viewOpportunity('${item.id}')">View</button>`,
                    `<button class="btn btn-sm btn-warning" onclick="saveToShortlist('${item.id}')">Save</button>`,
                    `<button class="btn btn-sm btn-success" onclick="acceptRequest('${item.id}')">Accept</button>`
                ],
                shortlist: [
                    `<button class="btn btn-sm btn-primary" onclick="viewShortlistItem('${item.id}')">View</button>`,
                    `<button class="btn btn-sm btn-success" onclick="acceptRequest('${item.id}')">Accept</button>`,
                    `<button class="btn btn-sm btn-danger" onclick="removeFromShortlist('${item.id}')">Remove</button>`
                ],
                history: [
                    `<button class="btn btn-sm btn-primary" onclick="viewHistoryDetails('${item.matchId}')">View</button>`,
                    ...(item.requestStatus === 'assigned' ? [`<button class="btn btn-sm btn-success" onclick="completeMatch('${item.matchId}')">Complete</button>`] : [])
                ]
            };
            
            return buttons[type]?.join('') || '';
        }

        // Search Handlers
        async function handleSearch() {
            const searchTerm = document.getElementById('searchTerm').value;
            const category = document.getElementById('searchCategory').value;
            const urgency = document.getElementById('searchUrgency').value;
            
            await searchOpportunities({
                searchTerm: searchTerm,
                category: category,
                urgency: urgency
            });
        }
        
        async function handleShortlistSearch() {
            const searchTerm = document.getElementById('shortlistSearchTerm').value;
            const category = document.getElementById('shortlistCategory').value;
            const urgency = document.getElementById('shortlistUrgency').value;
            
            await searchShortlist({
                searchTerm: searchTerm,
                category: category,
                urgency: urgency
            });
        }
        
        async function handleHistorySearch() {
            const searchTerm = document.getElementById('historySearchTerm').value;
            const category = document.getElementById('historyCategory').value;
            const status = document.getElementById('historyStatus').value;
            
            await searchHistory({
                searchTerm: searchTerm,
                category: category,
                status: status
            });
        }
        
        // Utility Functions
        function showError(message) {
            alert('Error: ' + message);
        }
        
        function showSuccess(message) {
            alert('Success: ' + message);
        }
        
        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            loadDashboard();
        });
        
        // Ultra-Compact Modal System
        async function viewOpportunity(requestId) {
            const response = await apiCall('csrrepresentative_viewopportunity/viewOpportunity', { opportunityId: requestId, userId: '<%= user.id %>' });
            response.success ? showDetailsModal(response.data.opportunity, 'opportunity') : showError(response.error);
        }
        
        async function viewShortlistItem(requestId) {
            const response = await apiCall('csrrepresentative_viewshortlist/viewShortlist', { userId: '<%= user.id %>' });
            const item = response.success ? response.data.shortlistItems.find(item => item.id === requestId) : null;
            item ? showDetailsModal(item, 'shortlist') : showError(response.success ? 'Shortlist item not found' : response.error);
        }
        
        async function viewHistoryDetails(matchId) {
            const response = await apiCall('csrrepresentative_viewhistory/viewHistory', { userId: '<%= user.id %>' });
            const match = response.success ? response.data.historyItems.find(item => item.matchId === matchId) : null;
            match ? showDetailsModal(match, 'history') : showError(response.success ? 'Match not found' : response.error);
        }
        
        function showDetailsModal(data, type) {
            const isHistory = type === 'history';
            const status = data.status || data.requestStatus;
            const date = new Date(data.createdAt || data.requestCreatedAt || data.matchCreatedAt).toLocaleDateString();
            
            document.body.insertAdjacentHTML('beforeend', `
                <div class="modal fade" id="detailsModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">
                                    <i class="fas fa-${isHistory ? 'handshake' : 'eye'}"></i> ${isHistory ? 'Match' : 'Opportunity'} Details
                                    <span class="badge bg-${getClass(status, { 'pending': 'warning', 'assigned': 'info', 'completed': 'success' })} ms-2">${status}</span>
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h6 class="fw-bold">${data.title}</h6>
                                        <p class="text-muted">${data.description || 'No description available'}</p>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-2"><span class="badge bg-${getClass(data.urgency, { 'critical': 'danger', 'high': 'warning', 'medium': 'info', 'low': 'success' })}">${getIcon(data.urgency)} ${data.urgency}</span></div>
                                        <div class="mb-2"><span class="badge bg-primary">${data.categoryName}</span></div>
                                        <div class="mb-2"><span class="badge bg-${getClass(status, { 'pending': 'warning', 'assigned': 'info', 'completed': 'success' })}">${status}</span></div>
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-md-6"><strong>Created by:</strong> ${data.createdByName || 'Unknown'}</div>
                                    <div class="col-md-6"><strong>Created:</strong> ${date}</div>
                                </div>
                                ${isHistory ? `<div class="row mt-3"><div class="col-md-6"><strong>Service Type:</strong> ${data.serviceType || 'General Assistance'}</div><div class="col-md-6"><strong>Match Created:</strong> ${new Date(data.matchCreatedAt).toLocaleDateString()}</div></div>` : ''}
                                ${data.notes ? `<div class="row mt-3"><div class="col-12"><strong>Notes:</strong><p class="text-muted">${data.notes}</p></div></div>` : ''}
                            </div>
                            <div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button></div>
                        </div>
                    </div>
                </div>
            `);
            new bootstrap.Modal(document.getElementById('detailsModal')).show();
        }
        
        function getClass(value, classes) { return classes[value] || 'secondary'; }
        function getIcon(urgency) { return { 'critical': '🚨', 'high': '⚠️', 'medium': '⚡', 'low': '📋' }[urgency] || '📋'; }
        
        
    </script>
</body>
</html>