    <footer class="bg-light text-center text-muted py-3 mt-5">
        <div class="container">
            <p class="mb-0">
                <i class="fas fa-heart text-danger"></i> 
                CSR Volunteering Platform - Connecting Communities Through Service
            </p>
            <small>&copy; <%= new Date().getFullYear() %> CSR Platform. All rights reserved.</small>
        </div>
    </footer>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" onload="console.log('Bootstrap loaded successfully')" onerror="console.error('Bootstrap failed to load')"></script>
    <script>
        // Fallback Bootstrap loading
        if (typeof bootstrap === 'undefined') {
            console.log('Bootstrap not loaded, trying alternative CDN...');
            const script = document.createElement('script');
            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js';
            script.onload = function() {
                console.log('Bootstrap loaded from alternative CDN');
                initializeDropdowns();
            };
            script.onerror = function() {
                console.error('Bootstrap failed to load from alternative CDN');
            };
            document.head.appendChild(script);
        } else {
            console.log('Bootstrap already loaded');
            initializeDropdowns();
        }
        
        function initializeDropdowns() {
            console.log('Initializing dropdowns...');
            const dropdownElements = document.querySelectorAll('.dropdown-toggle');
            console.log('Found dropdown elements:', dropdownElements.length);
            
            dropdownElements.forEach((element, index) => {
                try {
                    const dropdown = new bootstrap.Dropdown(element);
                    console.log(`Dropdown ${index + 1} initialized for:`, element);
                    
                    // Test if dropdown menu exists
                    const menu = element.nextElementSibling;
                    if (menu && menu.classList.contains('dropdown-menu')) {
                        console.log(`Dropdown ${index + 1} menu found:`, menu);
                        console.log(`Dropdown ${index + 1} menu display:`, getComputedStyle(menu).display);
                        console.log(`Dropdown ${index + 1} menu visibility:`, getComputedStyle(menu).visibility);
                        console.log(`Dropdown ${index + 1} menu z-index:`, getComputedStyle(menu).zIndex);
                    } else {
                        console.log(`Dropdown ${index + 1} menu not found`);
                    }
                    
                    // Add click event listener for testing
                    element.addEventListener('click', function(e) {
                        console.log('Dropdown clicked, preventing default...');
                        e.preventDefault();
                        e.stopPropagation();
                        
                        // Manually toggle dropdown
                        if (dropdown) {
                            dropdown.toggle();
                            console.log('Dropdown toggled manually');
                            
                            // Force show the dropdown menu
                            setTimeout(() => {
                                const menu = element.nextElementSibling;
                                if (menu && menu.classList.contains('dropdown-menu')) {
                                    console.log('Forcing dropdown menu to show...');
                                    menu.style.display = 'block';
                                    menu.style.visibility = 'visible';
                                    menu.style.opacity = '1';
                                    menu.classList.add('show');
                                    console.log('Menu display after force:', getComputedStyle(menu).display);
                                }
                            }, 10);
                        }
                    });
                    
                } catch (error) {
                    console.error(`Failed to initialize dropdown ${index + 1}:`, error);
                }
            });
            
            // Add click outside handler to close dropdowns
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.dropdown')) {
                    const openDropdowns = document.querySelectorAll('.dropdown-menu.show');
                    openDropdowns.forEach(menu => {
                        menu.style.display = 'none';
                        menu.classList.remove('show');
                    });
                }
            });
        }
    </script>
    <script src="/js/main.js"></script>
</body>
</html>