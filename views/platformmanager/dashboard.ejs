<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Platform Manager Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
    <style>
        .category-item {
            border-left: 4px solid #667eea;
            transition: all 0.3s ease;
        }
        .category-item:hover {
            border-left-color: #764ba2;
            background-color: #f8f9fa;
        }
    </style>
</head>
<body class="dashboard-container">
    <%- include('../partials/header', { title: 'Platform Manager Dashboard', user: user }) %>
    
    <!-- Toast Container -->
    <div class="toast-container"></div>
    
    <div class="container-fluid">
        <!-- Welcome Section -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="dashboard-header text-center">
                    <h1>
                        <i class="fas fa-tachometer-alt me-3"></i>
                        Welcome, <%= user.name %>
                    </h1>
                    <p>Manage your platform efficiently with our comprehensive dashboard</p>
                </div>
            </div>
        </div>

        <!-- Main Content Tabs -->
        <div class="row">
            <div class="col-12">
                <div class="dashboard-card card">
                    <div class="card-header section-header">
                        <ul class="nav nav-tabs card-header-tabs" id="mainTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active text-white" id="categories-tab" data-bs-toggle="tab" data-bs-target="#categories" type="button" role="tab">
                                    <i class="fas fa-tags me-2"></i>Categories
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link text-white" id="reports-tab" data-bs-toggle="tab" data-bs-target="#reports" type="button" role="tab">
                                    <i class="fas fa-chart-bar me-2"></i>Reports
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link text-white" id="analytics-tab" data-bs-toggle="tab" data-bs-target="#analytics" type="button" role="tab">
                                    <i class="fas fa-chart-line me-2"></i>Analytics
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="mainTabsContent">
                            <!-- Categories Tab -->
                            <div class="tab-pane fade show active" id="categories" role="tabpanel">
                                <div class="row mb-4">
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-plus-circle text-success me-2"></i>Create New Category</h5>
                                        <form id="createCategoryForm" class="needs-validation" novalidate>
                                            <input type="hidden" name="userId" value="<%= user.id %>">
                                            <div class="mb-3">
                                                <label for="categoryName" class="form-label">Category Name</label>
                                                <input type="text" class="form-control" id="categoryName" name="categoryName" required>
                                                <div class="invalid-feedback">Please provide a category name.</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="description" class="form-label">Description</label>
                                                <textarea class="form-control" id="description" name="description" rows="3" placeholder="Optional description..."></textarea>
                                            </div>
                                            <button type="submit" class="btn btn-success action-btn">
                                                <i class="fas fa-plus me-2"></i>Create Category
                                            </button>
                                        </form>
                                    </div>
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-edit text-primary me-2"></i>Update Category</h5>
                                        <form id="updateCategoryForm" class="needs-validation" novalidate>
                                            <input type="hidden" name="userId" value="<%= user.id %>">
                                            <div class="mb-3">
                                                <label for="updateCategoryId" class="form-label">Category ID</label>
                                                <input type="text" class="form-control" id="updateCategoryId" name="categoryId" required>
                                                <div class="invalid-feedback">Please provide a category ID.</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="newName" class="form-label">New Name</label>
                                                <input type="text" class="form-control" id="newName" name="newName" required>
                                                <div class="invalid-feedback">Please provide a new name.</div>
                                            </div>
                                            <button type="submit" class="btn btn-primary action-btn">
                                                <i class="fas fa-edit me-2"></i>Update Category
                                            </button>
                                        </form>
                                    </div>
                                </div>
                                
                                <div class="row mb-4">
                                    <div class="col-md-4">
                                        <button class="btn btn-info action-btn w-100" onclick="viewAllCategories()">
                                            <i class="fas fa-eye me-2"></i>View All Categories
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button class="btn btn-warning action-btn w-100" onclick="searchReports()">
                                            <i class="fas fa-search me-2"></i>Search Reports
                                        </button>
                                    </div>
                                    <div class="col-md-4">
                                        <button class="btn btn-danger action-btn w-100" data-bs-toggle="modal" data-bs-target="#deleteCategoryModal">
                                            <i class="fas fa-trash me-2"></i>Delete Category
                                        </button>
                                    </div>
                                </div>

                                <!-- Categories List -->
                                <div id="categoriesList" class="mt-4">
                                    <h5><i class="fas fa-list me-2"></i>Categories</h5>
                                    <div id="categoriesContent">
                                        <div class="text-center py-4">
                                            <i class="fas fa-spinner fa-spin fa-2x text-muted"></i>
                                            <p class="text-muted mt-2">Loading categories...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Reports Tab -->
                            <div class="tab-pane fade" id="reports" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100">
                                            <div class="card-header bg-success text-white text-center">
                                                <i class="fas fa-calendar-day fa-2x mb-2"></i>
                                                <h5>Daily Report</h5>
                                            </div>
                                            <div class="card-body text-center">
                                                <p class="text-muted">Generate daily activity report</p>
                                                <form id="dailyReportForm">
                                                    <input type="hidden" name="userId" value="<%= user.id %>">
                                                    <div class="mb-3">
                                                        <input type="date" class="form-control" name="date" required>
                                                    </div>
                                                    <button type="submit" class="btn btn-success action-btn">
                                                        <i class="fas fa-download me-2"></i>Generate Daily
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100">
                                            <div class="card-header bg-info text-white text-center">
                                                <i class="fas fa-calendar-week fa-2x mb-2"></i>
                                                <h5>Weekly Report</h5>
                                            </div>
                                            <div class="card-body text-center">
                                                <p class="text-muted">Generate weekly summary report</p>
                                                <form id="weeklyReportForm">
                                                    <input type="hidden" name="userId" value="<%= user.id %>">
                                                    <div class="mb-3">
                                                        <input type="week" class="form-control" name="week" required>
                                                    </div>
                                                    <button type="submit" class="btn btn-info action-btn">
                                                        <i class="fas fa-download me-2"></i>Generate Weekly
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100">
                                            <div class="card-header bg-warning text-white text-center">
                                                <i class="fas fa-calendar-alt fa-2x mb-2"></i>
                                                <h5>Monthly Report</h5>
                                            </div>
                                            <div class="card-body text-center">
                                                <p class="text-muted">Generate monthly comprehensive report</p>
                                                <form id="monthlyReportForm">
                                                    <input type="hidden" name="userId" value="<%= user.id %>">
                                                    <div class="mb-3">
                                                        <input type="month" class="form-control" name="month" required>
                                                    </div>
                                                    <button type="submit" class="btn btn-warning action-btn">
                                                        <i class="fas fa-download me-2"></i>Generate Monthly
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Analytics Tab -->
                            <div class="tab-pane fade" id="analytics" role="tabpanel">
                                <div class="row">
                                    <div class="col-12">
                                        <h5><i class="fas fa-chart-pie me-2"></i>Platform Analytics</h5>
                                        <p class="text-muted">Real-time insights into platform performance</p>
                                        
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="card">
                                                    <div class="card-header">
                                                        <h6><i class="fas fa-chart-bar me-2"></i>Category Distribution</h6>
                                                    </div>
                                                    <div class="card-body">
                                                        <canvas id="categoryChart" width="400" height="200"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="card">
                                                    <div class="card-header">
                                                        <h6><i class="fas fa-chart-line me-2"></i>Request Trends</h6>
                                                    </div>
                                                    <div class="card-body">
                                                        <canvas id="trendsChart" width="400" height="200"></canvas>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Category Modal -->
    <div class="modal fade" id="deleteCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="deleteCategoryForm">
                        <input type="hidden" name="userId" value="<%= user.id %>">
                        <div class="mb-3">
                            <label for="deleteCategoryId" class="form-label">Category ID to Delete</label>
                            <input type="text" class="form-control" id="deleteCategoryId" name="categoryId" required>
                            <div class="form-text">This action cannot be undone.</div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="deleteCategory()">
                        <i class="fas fa-trash me-2"></i>Delete Category
                    </button>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Global variables
        let categoriesData = [];
        let charts = {};

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadCategories();
            initializeCharts();
            setupEventListeners();
        });

        // Setup event listeners
        function setupEventListeners() {
            // Create category form
            document.getElementById('createCategoryForm').addEventListener('submit', function(e) {
                e.preventDefault();
                createCategory();
            });

            // Update category form
            document.getElementById('updateCategoryForm').addEventListener('submit', function(e) {
                e.preventDefault();
                updateCategory();
            });

            // Report forms
            document.getElementById('dailyReportForm').addEventListener('submit', function(e) {
                e.preventDefault();
                generateReport('daily');
            });

            document.getElementById('weeklyReportForm').addEventListener('submit', function(e) {
                e.preventDefault();
                generateReport('weekly');
            });

            document.getElementById('monthlyReportForm').addEventListener('submit', function(e) {
                e.preventDefault();
                generateReport('monthly');
            });
        }

        // AJAX helper function
        async function makeRequest(url, data) {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                return await response.json();
            } catch (error) {
                console.error('Request failed:', error);
                showToast('Request failed. Please try again.', 'error');
                return { success: false, error: 'Network error' };
            }
        }

        // Show toast notifications
        function showToast(message, type = 'info') {
            const toastContainer = document.querySelector('.toast-container');
            const toastId = 'toast-' + Date.now();
            const bgClass = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info';
            
            const toastHTML = `
                <div id="${toastId}" class="toast ${bgClass} text-white" role="alert">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                        ${message}
                    </div>
                </div>
            `;
            
            toastContainer.insertAdjacentHTML('beforeend', toastHTML);
            const toastElement = document.getElementById(toastId);
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
            
            // Remove toast after it's hidden
            toastElement.addEventListener('hidden.bs.toast', () => {
                toastElement.remove();
            });
        }

        // Load categories
        async function loadCategories() {
            try {
                const result = await makeRequest('/bce/platformmanager_viewcategory/viewCategory', {
                    userId: '<%= user.id %>'
                });
                
                if (result.success) {
                    categoriesData = result.data || [];
                    displayCategories();
                } else {
                    showToast('Failed to load categories: ' + result.error, 'error');
                }
            } catch (error) {
                showToast('Error loading categories', 'error');
            }
        }

        // Display categories
        function displayCategories() {
            const container = document.getElementById('categoriesContent');
            
            if (categoriesData.length === 0) {
                container.innerHTML = `
                    <div class="text-center py-4">
                        <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                        <p class="text-muted">No categories found. Create your first category!</p>
                    </div>
                `;
                return;
            }

            const categoriesHTML = categoriesData.map(category => `
                <div class="category-item card mb-3 fade-in">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <h6 class="mb-1">${category.name || 'Unnamed Category'}</h6>
                                <p class="text-muted mb-0">${category.description || 'No description'}</p>
                                <small class="text-muted">ID: ${category.id}</small>
                            </div>
                            <div class="col-md-3">
                                <span class="badge ${category.status === 'active' ? 'bg-success' : 'bg-secondary'}">
                                    ${category.status || 'Unknown'}
                                </span>
                                <br>
                                <small class="text-muted">${category.requestCount || 0} requests</small>
                            </div>
                            <div class="col-md-3 text-end">
                                <button class="btn btn-sm btn-outline-primary me-1" onclick="editCategory('${category.id}')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="confirmDeleteCategory('${category.id}')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');

            container.innerHTML = categoriesHTML;
        }


        // Create category
        async function createCategory() {
            const form = document.getElementById('createCategoryForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            if (!data.categoryName.trim()) {
                showToast('Please enter a category name', 'error');
                return;
            }

            const result = await makeRequest('/bce/platformmanager_createcategory/createCategory', data);
            
            if (result.success) {
                showToast('Category created successfully!', 'success');
                form.reset();
                loadCategories();
            } else {
                showToast('Failed to create category: ' + result.error, 'error');
            }
        }

        // Update category
        async function updateCategory() {
            const form = document.getElementById('updateCategoryForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            if (!data.categoryId.trim() || !data.newName.trim()) {
                showToast('Please fill in all required fields', 'error');
                return;
            }

            const result = await makeRequest('/bce/platformmanager_updatecategory/updateCategory', data);
            
            if (result.success) {
                showToast('Category updated successfully!', 'success');
                form.reset();
                loadCategories();
            } else {
                showToast('Failed to update category: ' + result.error, 'error');
            }
        }

        // Delete category
        async function deleteCategory() {
            const categoryId = document.getElementById('deleteCategoryId').value;
            
            if (!categoryId.trim()) {
                showToast('Please enter a category ID', 'error');
                return;
            }

            const result = await makeRequest('/bce/platformmanager_deletecategory/deleteCategory', {
                userId: '<%= user.id %>',
                categoryId: categoryId
            });
            
            if (result.success) {
                showToast('Category deleted successfully!', 'success');
                document.getElementById('deleteCategoryId').value = '';
                bootstrap.Modal.getInstance(document.getElementById('deleteCategoryModal')).hide();
                loadCategories();
            } else {
                showToast('Failed to delete category: ' + result.error, 'error');
            }
        }

        // View all categories
        async function viewAllCategories() {
            await loadCategories();
            showToast('Categories refreshed!', 'success');
        }

        // Search reports
        async function searchReports() {
            const searchTerm = prompt('Enter search term (optional):');
            const reportType = prompt('Enter report type (daily/weekly/monthly/all):', 'all');
            const startDate = prompt('Enter start date (YYYY-MM-DD, optional):');
            const endDate = prompt('Enter end date (YYYY-MM-DD, optional):');

            const data = {
                userId: '<%= user.id %>',
                searchTerm: searchTerm || '',
                reportType: reportType || 'all',
                startDate: startDate || '',
                endDate: endDate || ''
            };

            const result = await makeRequest('/bce/platformmanager_searchreport/searchReport', data);
            
            if (result.success) {
                showToast(`Found ${result.reports ? result.reports.length : 0} reports matching your criteria`, 'success');
                console.log('Search results:', result);
            } else {
                showToast('Failed to search reports: ' + result.error, 'error');
            }
        }

        // Generate reports
        async function generateReport(type) {
            const form = document.getElementById(type + 'ReportForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            const endpoint = `/bce/platformmanager_generate${type}report/generate${type.charAt(0).toUpperCase() + type.slice(1)}Report`;
            const result = await makeRequest(endpoint, data);
            
            if (result.success) {
                showToast(`${type.charAt(0).toUpperCase() + type.slice(1)} report generated successfully!`, 'success');
                console.log(`${type} report data:`, result.data);
                
                // Display report data in a modal or alert
                if (result.data) {
                    displayReportData(type, result.data);
                }
            } else {
                showToast(`Failed to generate ${type} report: ` + result.error, 'error');
            }
        }

        // Display report data
        function displayReportData(type, data) {
            const reportInfo = `
                ${type.charAt(0).toUpperCase() + type.slice(1)} Report Generated:
                
                Total Matches: ${data.total || 0}
                Pending: ${data.pending || 0}
                Completed: ${data.completed || 0}
                Cancelled: ${data.cancelled || 0}
                
                Generated at: ${new Date().toLocaleString()}
            `;
            
            alert(reportInfo);
        }

        // Edit category
        function editCategory(categoryId) {
            document.getElementById('updateCategoryId').value = categoryId;
            document.getElementById('newName').focus();
            showToast('Category ID filled. Enter new name and click Update.', 'info');
        }

        // Confirm delete category
        function confirmDeleteCategory(categoryId) {
            document.getElementById('deleteCategoryId').value = categoryId;
            new bootstrap.Modal(document.getElementById('deleteCategoryModal')).show();
        }

        // Initialize charts
        function initializeCharts() {
            // Category distribution chart
            const categoryCtx = document.getElementById('categoryChart');
            if (categoryCtx) {
                charts.category = new Chart(categoryCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Active', 'Inactive'],
                        datasets: [{
                            data: [0, 0],
                            backgroundColor: ['#4facfe', '#fa709a'],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            // Trends chart
            const trendsCtx = document.getElementById('trendsChart');
            if (trendsCtx) {
                charts.trends = new Chart(trendsCtx, {
                    type: 'line',
                    data: {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                        datasets: [{
                            label: 'Requests',
                            data: [12, 19, 3, 5, 2, 3],
                            borderColor: '#667eea',
                            backgroundColor: 'rgba(102, 126, 234, 0.1)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        }

        // Update charts when data changes
        function updateCharts() {
            if (charts.category && categoriesData.length > 0) {
                const active = categoriesData.filter(cat => cat.status === 'active').length;
                const inactive = categoriesData.length - active;
                
                charts.category.data.datasets[0].data = [active, inactive];
                charts.category.update();
            }
        }

        // Override loadCategories to also update charts
        const originalLoadCategories = loadCategories;
        loadCategories = async function() {
            await originalLoadCategories();
            updateCharts();
        };
    </script>
</body>
</html>